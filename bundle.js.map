{"version":3,"sources":["webpack:///webpack/bootstrap 1d292c5684a678944a52","webpack:///external \"React\"","webpack:///./src/Data/Model.ts","webpack:///./src/components/ConversationFiler.tsx","webpack:///external \"ReactDOM\"","webpack:///./src/Data/EWSData.ts","webpack:///./src/Data/RESTData.ts","webpack:///./src/components/Feedback.tsx","webpack:///./src/components/SearchResults.tsx","webpack:///./src/components/StatusMessage.tsx","webpack:///./src/index.tsx"],"names":[],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 9);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 1d292c5684a678944a52","module.exports = React;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"React\"\n// module id = 0\n// module chunks = 0","export module Data {\n    export interface Message {\n        Id: string;\n        BodyPreview: string;\n        Sender: string;\n        ToRecipients: string;\n        ParentFolderId: string;\n    }\n\n    export interface Folder {\n        Id: string;\n        DisplayName: string;\n    }\n\n    export interface Match {\n        message: Message;\n        folder: Folder;\n    }\n\n    export enum Progress {\n        GetCallbackToken,\n        GetConversation,\n        GetExcludedFolders,\n        GetFolderNames,\n        Success,\n        NotFound,\n        Error\n    }\n\n    export interface IModel {\n        getItemsAsync(onLoadComplete:(results: Match[]) => void, onProgress:(progress: Progress) => void, onError:(message: string) => void): void;\n        moveItemsAsync(folderId: string, onMoveComplete:(count: number) => void, onError:(message: string) => void): void;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/Data/Model.ts","/// <reference path=\"../_references.ts\" />\n\nimport * as React from \"react\";\nimport * as JQuery from \"jquery\";\n\nimport { Data } from \"../Data/Model\"\nimport { RESTData } from \"../Data/RESTData\";\nimport { EWSData } from \"../Data/EWSData\";\n\nimport { StatusMessage } from \"./StatusMessage\";\nimport { SearchResults } from \"./SearchResults\";\nimport { Feedback } from \"./Feedback\";\n\nexport interface ConversationFilerProps {\n    mailbox: Office.Mailbox;\n    mockResults?: Data.Match[];\n    onComplete?:() => void;\n}\n\ninterface ConversationFilerState {\n    progress: Data.Progress;\n    data?: Data.IModel;\n    error?: string;\n    matches?: Data.Match[];\n}\n\nexport class ConversationFiler extends React.Component<ConversationFilerProps, ConversationFilerState> {\n    constructor(props: ConversationFilerProps) {\n        super(props);\n        this.state = { progress: Data.Progress.GetCallbackToken };\n    }\n\n    // Start the chain of requests by getting a callback token.\n    componentDidMount() {\n        if (this.props.mockResults) {\n            if (this.props.mockResults.length > 0) {\n                this.setState({ progress: Data.Progress.Success, matches: this.props.mockResults });\n            } else {\n                this.setState({ progress: Data.Progress.NotFound });\n            }\n\n            return;\n        } else if (!this.props.mailbox) {\n            return;\n        }\n\n        const data = this.props.mailbox.restUrl\n            ? new RESTData.Model(this.props.mailbox)\n            : new EWSData.Model(this.props.mailbox);\n\n        this.setState({ data: data });\n\n        data.getItemsAsync((results) => {\n            if (results.length > 0) {\n                this.setState({ progress: Data.Progress.Success, matches: results });\n            } else {\n                this.setState({ progress: Data.Progress.NotFound });\n            }\n        }, (progress) => {\n            this.setState({ progress: progress });\n        }, (message) => {\n            this.setState({ progress: Data.Progress.Error, error: message });\n        });\n    }\n\n    private onSelection(folderId: string) {\n        console.log(`Selected a folder: ${folderId}`);\n\n        this.state.data.moveItemsAsync(folderId, (count) => {\n            if (this.props.onComplete) {\n                this.props.onComplete();\n            }\n        }, (message) => {\n            this.setState({ progress: Data.Progress.Error, error: message });\n        });\n    }\n\n    render() {\n        return (<div>\n            <StatusMessage progress={this.state.progress} message={this.state.error} />\n            <SearchResults matches={this.state.matches} onSelection={this.onSelection.bind(this)} />\n            <Feedback />\n        </div>);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/ConversationFiler.tsx","module.exports = ReactDOM;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ReactDOM\"\n// module id = 3\n// module chunks = 0","import { Data } from \"./Model\"\n\nexport module EWSData {\n    interface ItemId {\n        id: string;\n        changeKey: string;\n    }\n\n    interface FolderData {\n        folderId: ItemId;\n        displayName?: string;\n    }\n\n    interface MessageData {\n        itemId: ItemId;\n        conversation: ConversationData;\n        folder?: FolderData;\n        body?: string;\n        from?: string;\n        to?: string;\n    }\n\n    interface ConversationData {\n        id: string;\n        items: MessageData[];\n        global: MessageData[];\n    }\n   \n    class RequestBuilder {\n        private static beginRequest = [\n            '<?xml version=\"1.0\" encoding=\"utf-8\" ?>', \n            '<soap:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"', \n            '    xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"', \n            '    xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\"', \n            '    xmlns:t=\"http://schemas.microsoft.com/exchange/services/2006/types\"', \n            '    xmlns:m=\"http://schemas.microsoft.com/exchange/services/2006/messages\">', \n            '<soap:Header>', \n            '  <t:RequestServerVersion Version=\"Exchange2010_SP1\" />', \n            '</soap:Header>', \n            '<soap:Body>', \n        ].join('\\n');\n\n        private static endRequest = [\n            '</soap:Body>', \n            '</soap:Envelope>'\n        ].join('\\n');\n\n        static findConversationRequest = [\n            RequestBuilder.beginRequest, \n            '  <m:FindConversation>', \n            '    <m:IndexedPageItemView BasePoint=\"Beginning\" Offset=\"0\" MaxEntriesReturned=\"20\" />', \n            '    <m:ParentFolderId>', \n            '      <t:DistinguishedFolderId Id=\"inbox\"/>', \n            '    </m:ParentFolderId>', \n            '  </m:FindConversation>', \n            RequestBuilder.endRequest\n        ].join('\\n');\n\n        static getItemsRequest(messages: MessageData[]) {\n            var builder = [\n                RequestBuilder.beginRequest, \n                '  <m:GetItem>', \n                '    <m:ItemShape>', \n                '      <t:BaseShape>IdOnly</t:BaseShape>', \n                '      <t:BodyType>Text</t:BodyType>', \n                '      <t:AdditionalProperties>', \n                '        <t:FieldURI FieldURI=\"item:ParentFolderId\" />', \n                '        <t:FieldURI FieldURI=\"message:Sender\" />', \n                '        <t:FieldURI FieldURI=\"message:ToRecipients\" />', \n                '        <t:FieldURI FieldURI=\"item:Body\" />', \n                '      </t:AdditionalProperties>', \n                '    </m:ItemShape>', \n                '    <m:ItemIds>', \n            ];\n\n            for (let i = 0; i < messages.length; i++) {\n                builder.push(`      <t:ItemId Id=\"${messages[i].itemId.id}\" ChangeKey=\"${messages[i].itemId.changeKey}\" />`);\n            }\n\n            builder.push(\n                '    </m:ItemIds>',\n                '  </m:GetItem>',\n                RequestBuilder.endRequest);\n\n            return builder.join('\\n');\n        }\n\n        static excludedFolderIdsRequest = [\n            RequestBuilder.beginRequest, \n            '  <m:GetFolder>', \n            '    <m:FolderShape>', \n            '      <t:BaseShape>IdOnly</t:BaseShape>', \n            '    </m:FolderShape>', \n            '    <m:FolderIds>', \n            '      <t:DistinguishedFolderId Id=\"inbox\"/>', \n            '      <t:DistinguishedFolderId Id=\"drafts\"/>', \n            '      <t:DistinguishedFolderId Id=\"sentitems\"/>', \n            '      <t:DistinguishedFolderId Id=\"deleteditems\"/>', \n            '    </m:FolderIds>', \n            '  </m:GetFolder >', \n            RequestBuilder.endRequest\n        ].join('\\n');\n\n        static getFolderNamesRequest(folders: FolderData[]) {\n            var builder = [\n                RequestBuilder.beginRequest, \n                '  <m:GetFolder>', \n                '    <m:FolderShape>', \n                '      <t:BaseShape>IdOnly</t:BaseShape>', \n                '      <t:AdditionalProperties>', \n                '        <t:FieldURI FieldURI=\"folder:DisplayName\" />', \n                '      </t:AdditionalProperties>', \n                '    </m:FolderShape>', \n                '    <m:FolderIds>'\n            ];\n\n            for (let i = 0; i < folders.length; i++) {\n                builder.push(`      <t:FolderId Id=\"${folders[i].folderId.id}\" ChangeKey=\"${folders[i].folderId.changeKey}\" />`);\n            }\n\n            builder.push(\n                '    </m:FolderIds>',\n                '  </m:GetFolder >',\n                RequestBuilder.endRequest);\n\n            return builder.join('\\n');\n        }\n\n        static moveItemsRequest(messages: MessageData[], folderId: string) {\n            var builder = [\n                RequestBuilder.beginRequest, \n                '  <m:MoveItem>', \n                '    <m:ToFolderId>', \n                '      <t:FolderId Id=\"' + folderId + '\"/>', \n                '    </m:ToFolderId>', \n                '    <m:ItemIds>', \n            ];\n\n            for (let i = 0; i < messages.length; i++) {\n                builder.push(`      <t:ItemId Id=\"${messages[i].itemId.id}\" ChangeKey=\"${messages[i].itemId.changeKey}\" />`);\n            }\n\n            builder.push(\n                '    </m:ItemIds>',\n                '  </m:MoveItem>',\n                RequestBuilder.endRequest);\n\n            return builder.join('\\n');\n        }\n    }\n\n    class Context {\n        constructor(private mailbox: Office.Mailbox) {\n        }\n        \n        private conversationXml?: XMLDocument;\n        private conversation?: ConversationData;\n        private excludedFolders?: FolderData[];\n        private itemsXml?: XMLDocument;\n        private folderNamesXml?: XMLDocument;\n\n        private onLoadComplete?:(results: Data.Match[]) => void;\n        private onProgress?:(progress: Data.Progress) => void;\n        private onError?:(message: string) => void;\n        private onMoveComplete?:(count: number) => void\n\n        loadItems(onLoadComplete:(results: Data.Match[]) => void, onProgress:(progress: Data.Progress) => void, onError:(message: string) => void): void {\n            this.onLoadComplete = onLoadComplete;\n            this.onProgress = onProgress;\n            this.onError = onError;\n\n            console.log('Finding the conversation with EWS...');\n            this.onProgress(Data.Progress.GetConversation);\n\n            this.mailbox.makeEwsRequestAsync(RequestBuilder.findConversationRequest, (result) => {\n                if (!result.value) {\n                    this.onError(result.error.message);\n                    return;\n                }\n\n                this.conversationXml = $.parseXML(result.value);\n                this.getConversation();\n            });\n        }\n\n        private getConversation() {\n            const $conversation = $(this.conversationXml.querySelectorAll('Conversation > GlobalItemIds > ItemId'))\n                .filter(`[Id=\"${(<Office.ItemRead>this.mailbox.item).itemId}\"]`)\n                .parents('Conversation');\n\n            if (!$conversation.length) {\n                this.onError(\"This conversation isn't in your inbox's top 20.\");\n                return;\n            }\n\n            const messageCount = parseInt($conversation.find('MessageCount').text());\n            const globalCount = parseInt($conversation.find('GlobalMessageCount').text());\n\n            if (messageCount >= globalCount) {\n                this.onLoadComplete([]);\n                return;\n            }\n\n            let sameFolderItemIds: ItemId[] = [];\n\n            $conversation.find('ItemIds > ItemId').each(function () {\n                const $this = $(this);\n                \n                sameFolderItemIds.push({\n                    id: $this.attr('Id'),\n                    changeKey: $this.attr('ChangeKey')\n                });\n            });\n\n            let $otherFolderItemIds = $conversation.find('GlobalItemIds > ItemId');\n\n            for (var i = 0; i < sameFolderItemIds.length; i++) {\n                $otherFolderItemIds = $otherFolderItemIds.filter(`[Id!=\"${sameFolderItemIds[i].id}\"]`);\n            }\n\n            let otherFolderItemIds: ItemId[] = [];\n\n            $otherFolderItemIds.each(function () {\n                const $this = $(this);\n\n                otherFolderItemIds.push({\n                    id: $this.attr('Id'),\n                    changeKey: $this.attr('ChangeKey')\n                });\n            });\n\n            if (!sameFolderItemIds.length || !otherFolderItemIds.length) {\n                this.onLoadComplete([]);\n                return;\n            }\n\n            this.conversation = {\n                id: (<Office.Message>this.mailbox.item).conversationId,\n                items: [],\n                global: []\n            };\n\n            for (let i = 0; i < sameFolderItemIds.length; i++) {\n                this.conversation.items.push({\n                    itemId: sameFolderItemIds[i],\n                    conversation: this.conversation\n                });\n            }\n            \n            for (var i = 0; i < otherFolderItemIds.length; i++) {\n                this.conversation.global.push({\n                    itemId: otherFolderItemIds[i],\n                    conversation: this.conversation\n                });\n            }\n\n            this.loadExcludedFolders();\n        }\n\n        private loadExcludedFolders() {\n            if (this.excludedFolders) {\n                this.loadMessages();\n            } else {\n                console.log('Getting the list of excluded folders');\n                this.onProgress(Data.Progress.GetExcludedFolders);\n\n                this.mailbox.makeEwsRequestAsync(RequestBuilder.excludedFolderIdsRequest, (result) => {\n                    if (!result.value) {\n                        this.onError(result.error.message);\n                        return;\n                    }\n\n                    let foldersXml = $.parseXML(result.value);\n                    let excludedFolders: FolderData[] = [];\n\n                    $(foldersXml.querySelectorAll('GetFolderResponseMessage > Folders > Folder > FolderId')).each(function () {\n                        var $this = $(this);\n                        excludedFolders.push({\n                            folderId: {\n                                id: $this.attr('Id'),\n                                changeKey: $this.attr('ChangeKey')\n                            }\n                        });\n                    });\n\n                    this.excludedFolders = excludedFolders;\n\n                    this.loadMessages();\n                });\n            }\n        }\n\n        private loadMessages() {\n            if (this.itemsXml) {\n                this.getMessages();\n            } else {\n                console.log(`Getting the messages in other folders: ${this.conversation.global.length}`);\n                this.onProgress(Data.Progress.GetConversation);\n\n                this.mailbox.makeEwsRequestAsync(RequestBuilder.getItemsRequest(this.conversation.global), (result) => {\n                    if (!result.value) {\n                        this.onError(result.error.message);\n                        return;\n                    }\n\n                    this.itemsXml = $.parseXML(result.value);\n                    this.getMessages();\n                });\n            }\n        }\n\n        private getMessages() {\n            let $messages = $(this.itemsXml.querySelectorAll('GetItemResponseMessage > Items > Message > ParentFolderId'));\n\n            for (let i = 0; i < this.excludedFolders.length; i++) {\n                $messages = $messages.filter(`[Id!=\"${this.excludedFolders[i].folderId.id}\"]`);\n            }\n\n            $messages = $messages.parent();\n\n            for (let i = 0; i < this.conversation.global.length; i++) {\n                let item = this.conversation.global[i];\n\n                for (let j = 0; j < $messages.length; j++) {\n                    let msg = $messages[j];\n                    if (msg.querySelector(`ItemId[Id=\"${item.itemId.id}\"]`)) {\n                        let folderId = msg.querySelector('ParentFolderId');\n\n                        item.folder = {\n                            folderId: {\n                                id: folderId.getAttribute('Id'),\n                                changeKey: folderId.getAttribute('ChangeKey')\n                            }\n                        };\n                        item.from = msg.querySelector('Sender > Mailbox > Name').textContent;\n                        item.to = msg.querySelector('ToRecipients > Mailbox > Name').textContent;\n                        item.body = msg.querySelector('Body').textContent.slice(0, 200);\n                        break;\n                    }\n                }\n            }\n\n            this.loadFolderDisplayNames();\n        }\n\n        private loadFolderDisplayNames() {\n            if (this.folderNamesXml) {\n                this.getFolderDisplayNames();\n            } else {\n                let destinations = [];\n                \n                for (let i = 0; i < this.conversation.global.length; i++) {\n                    let item = this.conversation.global[i];\n                    \n                    if (item.folder) {\n                        destinations.push(item.folder);\n                    }\n                }\n\n                if (!destinations.length) {\n                    this.onLoadComplete([]);\n                    return;\n                }\n\n                console.log(`Getting the display names of the other folders: ${destinations.length}`);\n                this.onProgress(Data.Progress.GetFolderNames);\n\n                this.mailbox.makeEwsRequestAsync(RequestBuilder.getFolderNamesRequest(destinations), (result) => {\n                    if (!result.value) {\n                        this.onError(result.error.message);\n                        return;\n                    }\n\n                    this.folderNamesXml = $.parseXML(result.value);\n                    this.getFolderDisplayNames();\n                });\n            }\n        }\n\n        private getFolderDisplayNames() {\n            let matches: Data.Match[] = [];\n\n            this.conversation.global.map((item: MessageData) => {\n                if (!item.folder) {\n                    return;\n                }\n\n                const folder = this.folderNamesXml.querySelector(`GetFolderResponseMessage > Folders > Folder > FolderId[Id=\"${item.folder.folderId.id}\"]`).parentNode;\n                item.folder.displayName = (<Element>folder).querySelector('DisplayName').textContent;\n\n                matches.push({\n                    message: {\n                        Id: item.itemId.id,\n                        BodyPreview: item.body,\n                        Sender: item.from,\n                        ToRecipients: item.to,\n                        ParentFolderId: item.folder.folderId.id\n                    },\n                    folder: {\n                        Id: item.folder.folderId.id,\n                        DisplayName: item.folder.displayName\n                    }\n                });\n            });\n\n            console.log(`Finished loading items in other folders: ${matches.length}`);\n            this.onLoadComplete(matches);\n        }\n\n        moveItems(folderId: string, onMoveComplete:(count: number) => void, onError:(message: string) => void) {\n            this.onMoveComplete = onMoveComplete;\n            this.onError = onError;\n\n           console.log(`Moving items to folder: ${folderId}`);\n\n            this.mailbox.makeEwsRequestAsync(RequestBuilder.moveItemsRequest(this.conversation.items, folderId), (result) => {\n                if (!result.value) {\n                    this.onError(result.error.message);\n                    return;\n                }\n\n                console.log(`Finished moving items to other folder: ${this.conversation.items.length}`);\n                this.onMoveComplete(this.conversation.items.length);\n            });\n        }\n    }\n\n    export class Model implements Data.IModel {\n        private context?: Context;\n\n        constructor(mailbox: Office.Mailbox) {\n            this.context = new Context(mailbox);\n        }\n\n        getItemsAsync(onLoadComplete:(results: Data.Match[]) => void, onProgress:(progress: Data.Progress) => void, onError:(message: string) => void): void {\n            this.context.loadItems(onLoadComplete, onProgress, onError);\n        }\n\n        moveItemsAsync(folderId: string, onMoveComplete:(count: number) => void, onError:(message: string) => void): void {\n            this.context.moveItems(folderId, onMoveComplete, onError);\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/Data/EWSData.ts","/// <reference path=\"../_references.ts\" />\n\nimport { Data } from \"./Model\"\n\nexport module RESTData {\n    const Endpoint = '/v2.0/me';\n\n    enum ExcludedFolders {\n        Inbox,\n        Drafts,\n        SentItems,\n        DeletedItems,\n\n        // Sentinel value for enumerating the folder names\n        Count\n    }\n\n    interface EmailAddressJson {\n        Name: string;\n        Address: string;\n    }\n\n    interface AddressJson {\n        EmailAddress: EmailAddressJson;\n    }\n\n    interface MessageJson {\n        Id: string;\n        BodyPreview: string;\n        Sender: AddressJson;\n        ToRecipients: AddressJson[];\n        ParentFolderId: string;\n    }\n\n    interface MessageJsonCollection {\n        value: MessageJson[];\n    }\n\n    interface FolderJson {\n        Id: string;\n        DisplayName?: string;\n    }\n\n    class Context {\n        constructor(private mailbox: Office.Mailbox) {\n        }\n\n        private token?: string;\n        private currentFolderId?: string;\n        private conversationMessages?: MessageJson[];\n        private excludedFolderIds?: string[];\n        \n        private onLoadComplete?:(results: Data.Match[]) => void;\n        private onProgress?:(progress: Data.Progress) => void;\n        private onError?:(message: string) => void;\n        private onMoveComplete?:(count: number) => void\n\n        loadItems(onLoadComplete:(results: Data.Match[]) => void, onProgress:(progress: Data.Progress) => void, onError:(message: string) => void): void {\n            this.onLoadComplete = onLoadComplete;\n            this.onProgress = onProgress;\n            this.onError = onError;\n\n            console.log('Requesting the REST callback token...');\n            this.onProgress(Data.Progress.GetCallbackToken);\n\n            // Start the chain of requests by getting a callback token.\n            this.mailbox.getCallbackTokenAsync({isRest: true},\n                (result: Office.AsyncResult) => {\n                    if (result.status === Office.AsyncResultStatus.Succeeded) {\n                        this.getConversation(result);\n                    } else {\n                        this.onError(result.error.message);\n                    }\n                });\n        }\n\n        // Sometimes we need to make separate REST requests for multiple items. Wait until they all complete and then\n        // invoke the callbacks all at once with an array of typed results.\n        private collateRequests<T>(requests: JQueryPromise<T>[], onDone: (results: T[]) => void, onFail: (message: string) => void): void {\n            if (requests.length > 1) {\n                $.when.apply($, requests)\n                    .done((...results: any[]) => {\n                        let values: T[] = [];\n\n                        results.map((result: any[]) => {\n                            values.push(<T>result[0]);\n                        });\n\n                        onDone(values);\n                    }).fail((message: string) => {\n                        this.onError(message);\n                    });\n            } else {\n                requests[0]\n                    .done((result: T) => {\n                        onDone([result]);\n                    }).fail((message: string) => {\n                        this.onError(message);\n                    });\n            }\n        }\n\n        // Send a REST request to retrieve a list of messages in this conversation.\n        private getConversation(result: Office.AsyncResult) {\n            this.token = <string>result.value;\n\n            const conversationId = (<Office.Message>this.mailbox.item).conversationId;\n            const restConversationId = this.mailbox.diagnostics.hostName === 'OutlookIOS'\n                ? conversationId\n                : this.mailbox.convertToRestId(conversationId, Office.MailboxEnums.RestVersion.v2_0);\n            const restUrl = `${this.mailbox.restUrl}${Endpoint}/messages?$filter=ConversationId eq '${restConversationId}'&$select=Id,Subject,BodyPreview,Sender,ToRecipients,ParentFolderId`;\n            \n            console.log(`Getting the list of items in the conversation: ${restUrl}`);\n            this.onProgress(Data.Progress.GetConversation);\n\n            $.ajax({\n                url: restUrl,\n                async: true,\n                dataType: 'json',\n                headers: { 'Authorization': `Bearer ${this.token}`}\n            }).done((result: MessageJsonCollection) => {\n                this.getExcludedFolders(result);\n            }).fail((message: string) => {\n                this.onError(message);\n            });\n        }\n\n        // Send a REST request to identify each of the folders we want to exclude in our results.\n        private getExcludedFolders(result: MessageJsonCollection) {\n            if (!result || !result.value || 0 === result.value.length) {\n                this.onLoadComplete([]);\n                return;\n            }\n\n            this.conversationMessages = result.value;\n            \n            let currentFolderId: string;\n            let excludedFolderIds: string[] = [];\n\n            // We should ignore any messages in the same folder.\n            const itemId = (<Office.ItemRead>this.mailbox.item).itemId;\n            const restItemId = this.mailbox.diagnostics.hostName === 'OutlookIOS'\n                ? itemId\n                : this.mailbox.convertToRestId(itemId, Office.MailboxEnums.RestVersion.v2_0);\n\n            for (let i = 0; i < this.conversationMessages.length; ++i) {\n                if (this.conversationMessages[i].Id === restItemId) {\n                    currentFolderId = this.conversationMessages[i].ParentFolderId;\n                    excludedFolderIds.push(currentFolderId);\n                    break;\n                }\n            }\n\n            // We should also exclude some special folders, but we need to get their folderIds.\n            let requests: JQueryXHR[] = [];\n\n            for (let i = 0; i < ExcludedFolders.Count; ++i) {\n                const folderId = ExcludedFolders[i];\n                const restUrl = `${this.mailbox.restUrl}${Endpoint}/mailfolders/${folderId}?$select=Id`;\n\n                console.log(`Getting excluded folder ID: ${restUrl}`);\n\n                requests.push($.ajax({\n                    url: restUrl,\n                    async: true,\n                    dataType: 'json',\n                    headers: { 'Authorization': `Bearer ${this.token}` }\n                }));\n            }\n\n            this.onProgress(Data.Progress.GetExcludedFolders);\n\n            this.collateRequests(<JQueryPromise<FolderJson>[]>requests, (results: FolderJson[]) => {\n                results.map((value: FolderJson) => {\n                    excludedFolderIds.push(value.Id);\n                });\n\n                this.getFolderNames(currentFolderId, excludedFolderIds);\n            }, (message: string) => {\n                this.onError(message);\n            });\n        }\n\n        // Send REST requests to fill in the display names of all the folders we are not excluding.\n        private getFolderNames(currentFolderId: string, excludedFolderIds: string[]) {\n            let folderMap: {\n                folder: FolderJson;\n                messages: MessageJson[];\n            }[] = [];\n\n            this.conversationMessages.map((message: MessageJson) => {\n                for (let i = 0; i < excludedFolderIds.length; ++i) {\n                    if (excludedFolderIds[i] === message.ParentFolderId) {\n                        // Skip this message.\n                        return;\n                    }\n                }\n\n                for (let i = 0; i < folderMap.length; ++i) {\n                    if (folderMap[i].folder.Id === message.ParentFolderId) {\n                        // Add this message to the existing entry.\n                        folderMap[i].messages.push(message);\n                        return;\n                    }\n                }\n\n                // Create a new entry for this folder.\n                folderMap.push({ folder: { Id: message.ParentFolderId }, messages: [ message ] });\n            });\n\n            if (folderMap.length === 0) {\n                this.onLoadComplete([]);\n                return;\n            }\n\n            this.currentFolderId = currentFolderId;\n            this.excludedFolderIds = excludedFolderIds;\n\n            let requests: JQueryXHR[] = [];\n\n            folderMap.map((entry) => {\n                const restUrl = `${this.mailbox.restUrl}${Endpoint}/mailfolders/${entry.folder.Id}?$select=Id,DisplayName`;\n\n                console.log(`Getting included folder name: ${restUrl}`);\n\n                requests.push($.ajax({\n                    url: restUrl,\n                    async: true,\n                    dataType: 'json',\n                    headers: { 'Authorization': `Bearer ${this.token}` }\n                }));\n            });\n\n            this.onProgress(Data.Progress.GetFolderNames);\n\n            this.collateRequests(<JQueryPromise<FolderJson>[]>requests, (results: FolderJson[]) => {\n                results.map((value) => {\n                    for (let i = 0; i < folderMap.length; ++i) {\n                        if (folderMap[i].folder.Id === value.Id) {\n                            folderMap[i].folder.DisplayName = value.DisplayName;\n                            break;\n                        }\n                    }\n                });\n\n                let matches: Data.Match[] = [];\n\n                folderMap.map((entry) => {\n                    entry.messages.map((message) => {\n                        let recipients: string[] = [];\n                        \n                        message.ToRecipients.map((address) => {\n                            recipients.push(address.EmailAddress.Name);\n                        });\n\n                        let value: Data.Message = {\n                            Id: message.Id,\n                            BodyPreview: message.BodyPreview,\n                            Sender: message.Sender.EmailAddress.Name,\n                            ToRecipients: recipients.join('; '),\n                            ParentFolderId: message.ParentFolderId\n                        };\n\n                        matches.push({\n                            message: {\n                                Id: message.Id,\n                                BodyPreview: message.BodyPreview,\n                                Sender: message.Sender.EmailAddress.Name,\n                                ToRecipients: recipients.join('; '),\n                                ParentFolderId: message.ParentFolderId\n                            },\n                            folder: {\n                                Id: entry.folder.Id,\n                                DisplayName: entry.folder.DisplayName\n                            }\n                        });\n                    });\n                });\n\n                console.log(`Finished loading items in other folders: ${matches.length}`);\n                this.onLoadComplete(matches);\n            }, (message: string) => {\n                this.onError(message);\n            });\n        }\n\n        moveItems(folderId: string, onMoveComplete:(count: number) => void, onError:(message: string) => void) {\n            this.onMoveComplete = onMoveComplete;\n            this.onError = onError;\n\n            console.log(`Moving items to folder: ${folderId}`);\n\n            let requests: JQueryXHR[] = [];\n\n            this.conversationMessages.map((message: MessageJson) => {\n                if (message.ParentFolderId !== this.currentFolderId) {\n                    // Skip any messages that are not in the current folder.\n                    return;\n                }\n\n                const restUrl = `${this.mailbox.restUrl}${Endpoint}/messages/${message.Id}/move`;\n\n                console.log(`Moving item: ${restUrl}`);\n\n                requests.push($.ajax({\n                    url: restUrl,\n                    async: true,\n                    method: 'POST',\n                    contentType: 'application/json',\n                    dataType: 'json',\n                    data: JSON.stringify({ DestinationId: folderId }),\n                    headers: { 'Authorization': `Bearer ${this.token}` }\n                }));\n            });\n\n            this.collateRequests(<JQueryPromise<MessageJson>[]>requests, (results: MessageJson[]) => {\n                console.log(`Finished moving items to other folder: ${results.length}`);\n                this.onMoveComplete(results.length);\n            }, (message: string) => {\n                this.onError(message);\n            });\n        }\n    }\n\n    export class Model implements Data.IModel {\n        private context?: Context;\n\n        constructor(mailbox: Office.Mailbox) {\n            this.context = new Context(mailbox);\n        }\n\n        getItemsAsync(onLoadComplete:(results: Data.Match[]) => void, onProgress:(progress: Data.Progress) => void, onError:(message: string) => void): void {\n            this.context.loadItems(onLoadComplete, onProgress, onError);\n        }\n\n        moveItemsAsync(folderId: string, onMoveComplete:(count: number) => void, onError:(message: string) => void): void {\n            this.context.moveItems(folderId, onMoveComplete, onError);\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/Data/RESTData.ts","import * as React from \"react\";\n\nexport class Feedback extends React.Component<undefined, undefined> {\n    render() {\n        return (<div className=\"feedback\">\n            <a href=\"https://beandotnet.azurewebsites.net/\">about this app</a>\n            &nbsp;\n            <a href=\"mailto:wravery@hotmail.com?Subject=Auto%20Filer%20App%20for%20Outlook\">send feedback</a>\n        </div>);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/components/Feedback.tsx","import * as React from \"react\";\n\nimport { Data } from \"../Data/Model\"\n\nexport interface SearchResultsProps {\n    matches: Data.Match[];\n    onSelection: (folderId: string) => void;\n}\n\nexport class SearchResults extends React.Component<SearchResultsProps, undefined> {\n    constructor(props: SearchResultsProps) {\n        super(props);\n        this.onClickFolder = this.handleClick.bind(this);\n    }\n\n    render() {\n        if (!this.props.matches || this.props.matches.length === 0) {\n            return null;\n        }\n\n        let rows: JSX.Element[] = [];\n\n        this.props.matches.map((value: Data.Match, index: number) => {\n            rows.push(<tr key={index}>\n                <td><a name={value.folder.Id} onClick={this.onClickFolder}>{value.folder.DisplayName}</a></td>\n                <td>{value.message.Sender}</td>\n                <td>{value.message.ToRecipients}</td>\n                <td>{value.message.BodyPreview}</td>\n            </tr>);\n        });\n\n        return (<table>\n            <thead>\n                <tr>\n                    <th>Folder</th>\n                    <th>From</th>\n                    <th>To</th>\n                    <th>Preview</th>\n                </tr>\n            </thead>\n            <tbody>\n                {rows}\n            </tbody>\n        </table>);\n    }\n\n    private handleClick(evt: React.MouseEvent<HTMLAnchorElement>) {\n        this.props.onSelection(evt.currentTarget.name);\n        evt.preventDefault();\n    }\n\n    private onClickFolder: React.EventHandler<React.MouseEvent<HTMLAnchorElement>>;\n}\n\n\n// WEBPACK FOOTER //\n// ./src/components/SearchResults.tsx","import * as React from \"react\";\nimport { Data } from \"../Data/Model\";\n\nexport interface StatusMessageProps {\n    progress: Data.Progress;\n    message?: string;\n}\n\nexport class StatusMessage extends React.Component<StatusMessageProps, undefined> {\n    render() {\n        let className: string;\n        let status: string;\n\n        switch (this.props.progress)\n        {\n            case Data.Progress.GetCallbackToken:\n            case Data.Progress.GetConversation:\n            case Data.Progress.GetExcludedFolders:\n            case Data.Progress.GetFolderNames:\n                return <h3>Looking for other messages in this conversation...</h3>;\n\n            case Data.Progress.Success:\n                return null;\n\n            case Data.Progress.NotFound:\n                return <h3>It looks like you haven't filed this conversation anywhere before.</h3>;\n\n            default:\n                return (<div>\n                        <h3>Sorry, I couldn't figure out where this message should go. :(</h3>\n                        <span>{this.props.message}</span>\n                    </div>);\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/StatusMessage.tsx","/// <reference path=\"_references.ts\" />\n/// <reference path=\"./components/ConversationFiler.tsx\" />\n\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\n\nimport { Data } from \"./Data/Model\"\n\nimport { ConversationFiler } from \"./components/ConversationFiler\";\n\nOffice.initialize = function () {\n    const functionsRegex = /functions\\.html(\\?.*)?$/i;\n    const noUI = functionsRegex.test(window.location.pathname);\n\n    if (noUI) {\n        // Add the UI-less function callback if we're loaded from functions.html instead of index.html\n        (window as any).fileDialog = function (event: any) {\n            Office.context.ui.displayDialogAsync(window.location.href.replace(functionsRegex, \"dialog.html\"), { height: 25, width: 80, displayInIframe: true }, (result) => {\n                const dialog = result.value as Office.DialogHandler;\n\n                dialog.addEventHandler(Office.EventType.DialogMessageReceived, () => {\n                    dialog.close();\n                    event.completed();\n                });\n            });\n        };\n\n        return;\n    }\n\n    // Show the UI...\n    const mailbox = (Office.context || ({} as Office.Context)).mailbox;\n    let onComplete: () => void;\n\n    if (mailbox && /dialog\\.html(\\?.*)?$/i.test(window.location.pathname)) {\n        // When we finish moving the items, we want to dismiss the dialog and complete the callback\n        onComplete = () => {\n            Office.context.ui.messageParent(true);\n        };\n    }\n\n    ReactDOM.render(\n        <ConversationFiler mailbox={mailbox} onComplete={onComplete} />,\n        document.getElementById(\"conversationFilerRoot\")\n    );\n\n    // ...and if we're running outside of an Outlook client, run through the tests\n    if (!mailbox) {\n        let testEmpty = function () {\n            console.log(\"Testing the behavior with an empty set of matches...\");\n\n            // Need to clear out the DOM so it will mount a new ConversationFiler\n            ReactDOM.render(\n                <div>Testing...</div>,\n                document.getElementById(\"conversationFilerRoot\")\n            );\n\n            ReactDOM.render(\n                <ConversationFiler mailbox={null} mockResults={[]} />,\n                document.getElementById(\"conversationFilerRoot\")\n            );\n\n            window.setTimeout(testDummy, 3000);\n        }\n\n        let testDummy = function () {\n            console.log(\"Testing the behavior with a set of mock matches...\");\n\n            // Need to clear out the DOM so it will mount a new ConversationFiler\n            ReactDOM.render(\n                <div>Testing...</div>,\n                document.getElementById(\"conversationFilerRoot\")\n            );\n\n            let mockResults: Data.Match[] = [{\n                    folder: {\n                        Id: 'folderId1',\n                        DisplayName: 'Folder 1'\n                    },\n                    message: {\n                        Id: 'messageId1',\n                        BodyPreview: 'Here\\'s a preview of a message body',\n                        Sender: 'Foo Bar',\n                        ToRecipients: 'Baz Bar',\n                        ParentFolderId: 'folderId1'\n                    }\n                }, {\n                    folder: {\n                        Id: 'folderId2',\n                        DisplayName: 'Folder 2'\n                    },\n                    message: {\n                        Id: 'messageId2',\n                        BodyPreview: 'Here\\'s another message body',\n                        Sender: 'Baz Bar',\n                        ToRecipients: 'Foo Bar',\n                        ParentFolderId: 'folderId2'\n                    }\n                }];\n\n            ReactDOM.render(\n                <ConversationFiler mailbox={null} mockResults={mockResults} />,\n                document.getElementById(\"conversationFilerRoot\")\n            );\n        }\n\n        window.setTimeout(testEmpty, 3000);\n    }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.tsx"],"sourceRoot":""}